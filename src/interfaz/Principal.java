/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package interfaz;

import clases.Helper;
import javax.swing.JButton;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LUCYLEONOR
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        JButton botonesH[] = {cmdCrear,cmdLimpiar};
        JButton botonesD[] = {cmdLlenadoAutomatico, cmdLlenadoManual, cmdOperaciones};
        Helper.habilitarBotones(botonesH);
        Helper.deshabilitarBotones(botonesD);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txtNumeroFilas = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtNumeroColumnas = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        cmdCrear = new javax.swing.JButton();
        cmdLlenadoManual = new javax.swing.JButton();
        cmdLlenadoAutomatico = new javax.swing.JButton();
        cmdLimpiar = new javax.swing.JButton();
        cmdOperaciones = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        tblMatrizInicial = new javax.swing.JTable();
        cmbOperaciones = new javax.swing.JComboBox();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblMatrizResultante = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        jLabel1.setText("Operaciones con Matrices");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 10, -1, -1));

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos Iniciales", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setText("Núm. Filas");
        jPanel8.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        txtNumeroFilas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroFilasKeyTyped(evt);
            }
        });
        jPanel8.add(txtNumeroFilas, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 30, 40, -1));

        jLabel9.setText("Núm. Columnas");
        jPanel8.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 30, -1, -1));

        txtNumeroColumnas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroColumnasKeyTyped(evt);
            }
        });
        jPanel8.add(txtNumeroColumnas, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 30, 40, -1));

        jPanel1.add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 380, 70));

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Acciones", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        jPanel9.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cmdCrear.setText("Crear");
        cmdCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCrearActionPerformed(evt);
            }
        });
        jPanel9.add(cmdCrear, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 70, -1));

        cmdLlenadoManual.setText("Llenado Manual");
        cmdLlenadoManual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLlenadoManualActionPerformed(evt);
            }
        });
        jPanel9.add(cmdLlenadoManual, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, 120, -1));

        cmdLlenadoAutomatico.setText("Llenado Automatico");
        cmdLlenadoAutomatico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLlenadoAutomaticoActionPerformed(evt);
            }
        });
        jPanel9.add(cmdLlenadoAutomatico, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 30, -1, -1));

        cmdLimpiar.setText("Limpiar");
        cmdLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdLimpiarActionPerformed(evt);
            }
        });
        jPanel9.add(cmdLimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 30, 70, -1));

        cmdOperaciones.setText("Efectuar");
        cmdOperaciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdOperacionesActionPerformed(evt);
            }
        });
        jPanel9.add(cmdOperaciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 30, -1, -1));

        jPanel1.add(jPanel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 80, 540, 70));

        tblMatrizInicial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblMatrizInicial.setEnabled(false);
        jScrollPane8.setViewportView(tblMatrizInicial);

        jPanel1.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 170, 380, 350));

        cmbOperaciones.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Letra B", "Letra K", "Letra M", "Letra W", "Letra Q", "Letra J", "Letra G", "Letra R", "Figura 1", "Figura 2", "Figura 3", "Figura 4" }));
        jPanel1.add(cmbOperaciones, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 300, 140, -1));

        tblMatrizResultante.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblMatrizResultante.setEnabled(false);
        jScrollPane7.setViewportView(tblMatrizResultante);

        jPanel1.add(jScrollPane7, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 160, 380, 360));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 1181, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNumeroFilasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroFilasKeyTyped

        char c = evt.getKeyChar();

        if (!Character.isDigit(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtNumeroFilasKeyTyped

    private void txtNumeroColumnasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroColumnasKeyTyped

        char c = evt.getKeyChar();

        if (!Character.isDigit(c)) {
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_txtNumeroColumnasKeyTyped

    private void cmdCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCrearActionPerformed

        try {
            if (Integer.parseInt(txtNumeroColumnas.getText()) > 15) {
                Helper.mensaje(this, "El numero de columnas no puede ser mayor que 15", "Error", 2);
                txtNumeroColumnas.requestFocusInWindow();
            } else if (Integer.parseInt(txtNumeroFilas.getText()) > 15) {
                Helper.mensaje(this, "El numero de filas no puede ser mayor que 15", "Error", 2);
                txtNumeroFilas.requestFocusInWindow();
            } else if (Integer.parseInt(txtNumeroFilas.getText()) < 5) {
                Helper.mensaje(this, "El numero de filas no puede ser menor que 5", "Error", 2);
                txtNumeroFilas.requestFocusInWindow();
            } else if (Integer.parseInt(txtNumeroColumnas.getText()) < 4) {
                Helper.mensaje(this, "El numero de columnas no puede ser menor que 4", "Error", 2);
                txtNumeroColumnas.requestFocusInWindow();
            } else {

                DefaultTableModel tm, tm2;
                int nf, nc;
                tm = (DefaultTableModel) tblMatrizInicial.getModel();
                tm2 = (DefaultTableModel) tblMatrizResultante.getModel();

                nf = Integer.parseInt(txtNumeroFilas.getText());
                nc = Integer.parseInt(txtNumeroColumnas.getText());

                tm.setRowCount(nf);
                tm.setColumnCount(nc);

                tm2.setRowCount(nf);
                tm2.setColumnCount(nc);
                JButton botonesH[] = {cmdLlenadoAutomatico, cmdLlenadoManual, cmdLimpiar};
                JButton botonesD[] = {cmdOperaciones, cmdCrear};
                txtNumeroColumnas.setEditable(false);
                txtNumeroFilas.setEditable(false);
                Helper.deshabilitarBotones(botonesD);
                Helper.habilitarBotones(botonesH);
            }
        } catch (Exception e) {
            Helper.mensaje(this, "Revise la informacion e ingrese los datos correctamente", "Error", 2);
        }
    }//GEN-LAST:event_cmdCrearActionPerformed

    private void cmdLlenadoManualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLlenadoManualActionPerformed

        double n;
        int aux, nc, nf, res;
        boolean sw = true;
        nf = tblMatrizInicial.getRowCount();
        nc = tblMatrizInicial.getColumnCount();
        for (int i = 0; i < nf; i++) {
            for (int j = 0; j < nc; j++) {

                do {
                    aux = 1;
                    try {
                        n = Double.parseDouble(Helper.recibirDatos(this, "Digite el elemento en la posición: " + " (" + i + "," + j + ")"));
                        tblMatrizInicial.setValueAt((int) n, i, j);
                    } catch (NumberFormatException e) {
                        Helper.mensaje(this, "Digite la información correctamente", "Error", 2);
                        aux = 0;
                    } catch (NullPointerException e) {
                        res = Helper.mensaje(this, "¿Desea Salir?", "Salir", 3);
                        if (res == 0) {
                            aux = 1;
                            j = nc;
                            i = nf;
                            sw = false;
                            JButton botonesH[] = {cmdCrear, cmdLimpiar};
                            JButton botonesD[] = {cmdLlenadoAutomatico, cmdLlenadoManual, cmdOperaciones};
                            Helper.deshabilitarBotones(botonesD);
                            Helper.habilitarBotones(botonesH);
                            Helper.tablaPorDefecto(tblMatrizInicial);
                            Helper.tablaPorDefecto(tblMatrizResultante);
                            Helper.limpiarTabla(tblMatrizInicial, tblMatrizResultante);
                        } else {
                            aux = 0;
                            JButton botonesH[] = {cmdOperaciones, cmdLimpiar};
                            JButton botonesD[] = {cmdLlenadoAutomatico, cmdLlenadoManual, cmdCrear};
                            Helper.deshabilitarBotones(botonesD);
                            Helper.habilitarBotones(botonesH);
                        }

                    }
                } while (aux == 0);
            }
        }
        JButton botonesH[] = {cmdLimpiar};
        JButton botonesD[] = {cmdOperaciones, cmdLlenadoAutomatico, cmdLlenadoManual, cmdCrear};
        Helper.deshabilitarBotones(botonesD);
        Helper.habilitarBotones(botonesH);

    }//GEN-LAST:event_cmdLlenadoManualActionPerformed

    private void cmdLlenadoAutomaticoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLlenadoAutomaticoActionPerformed

        int nf, nc;
        int n;
        nf = tblMatrizInicial.getRowCount();
        nc = tblMatrizInicial.getColumnCount();

        for (int i = 0; i < nf; i++) {
            for (int j = 0; j < nc; j++) {
                n = (int) (Math.random() * 25 + 1);
                tblMatrizInicial.setValueAt(n, i, j);
            }

        }
        JButton botonesH[] = {cmdOperaciones, cmdLimpiar};
        JButton botonesD[] = {cmdLlenadoAutomatico, cmdLlenadoManual, cmdCrear};
        Helper.deshabilitarBotones(botonesD);
        Helper.habilitarBotones(botonesH);
    }//GEN-LAST:event_cmdLlenadoAutomaticoActionPerformed

    private void cmdLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdLimpiarActionPerformed

        Helper.limpiarTabla(tblMatrizInicial, tblMatrizResultante);

        txtNumeroFilas.setText("");
        txtNumeroColumnas.setText("");
        txtNumeroFilas.requestFocusInWindow();
        cmbOperaciones.setSelectedIndex(0);
        JButton botonesH[] = {cmdCrear, cmdLimpiar};
        JButton botonesD[] = {cmdLlenadoAutomatico, cmdLlenadoManual, cmdOperaciones};
        txtNumeroColumnas.setEditable(true);
        txtNumeroFilas.setEditable(true);
        Helper.deshabilitarBotones(botonesD);
        Helper.habilitarBotones(botonesH);
    }//GEN-LAST:event_cmdLimpiarActionPerformed

    private void cmdOperacionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdOperacionesActionPerformed

        int op, nf, nc, cont, aux, aux1, aux2;

        op = cmbOperaciones.getSelectedIndex();
        nf = tblMatrizInicial.getRowCount();
        nc = tblMatrizInicial.getColumnCount();
        cont = 0;
        for (int i = 0; i < nf; i++) {
            for (int j = 0; j < nc; j++) {

                tblMatrizResultante.setValueAt("", i, j);
            }

        }

        switch (op) {
            case 0:
                if (nf % 2 == 0) {
                    Helper.mensaje(this, "El numero de filas debe ser impar", "Error", 2);
                } else {
                    Helper.letraB(tblMatrizInicial, tblMatrizResultante);
                }
                break;
            case 1:
                if (nc > 4) {
                    Helper.mensaje(this, "El numero de columnas no debe ser mayor a 4", "Error", 2);
                } else {
                    Helper.letraK(tblMatrizInicial, tblMatrizResultante);
                }
                break;
            case 2:
                if (nc % 2 == 0) {
                    Helper.mensaje(this, "El numero de columnas y filas debe ser impar", "Error", 2);
                } else if (nf % 2 == 0) {
                    Helper.mensaje(this, "El numero de columnas filas debe ser impar", "Error", 2);
                } else if (nc != nf) {
                    Helper.mensaje(this, "El numero de filas debe ser igual al numero de columnas", "Error", 2);
                } else {
                    Helper.letraM(tblMatrizInicial, tblMatrizResultante);
                }
                break;
            case 3:
                if (nc % 2 == 0 || nf % 2 == 0) {
                    Helper.mensaje(this, "El numero de filas y columnas debe ser impar", "Error", 2);
                } else if (nc != nf) {
                    Helper.mensaje(this, "El numero de filas debe ser igual al numero de columnas", "Error", 2);
                } else {
                    Helper.letraW(tblMatrizInicial, tblMatrizResultante);
                }
                break;
            case 4:
                Helper.letraQ(tblMatrizInicial, tblMatrizResultante);
                break;
            case 5:
                if (nc % 2 == 0 || nf % 2 == 0) {
                    Helper.mensaje(this, "El numero de filas y columnas debe ser impar", "Error", 2);
                } else {
                    Helper.letraJ(tblMatrizInicial, tblMatrizResultante);
                }
                break;
            case 6:
                if (nc < 6 || nf < 6) {
                    Helper.mensaje(this, "El numero de filas y columnas debe ser mayor que 6", "Error", 2);
                } else {
                    Helper.letraG(tblMatrizInicial, tblMatrizResultante);
                }
                break;
            case 7:
                Helper.letraR(tblMatrizInicial, tblMatrizResultante);
                break;
            case 8:
                if (nc % 2 == 0 || nf % 2 == 0) {
                    Helper.mensaje(this, "El numero de filas y columnas debe ser impar", "Error", 2);
                } else if (nc != nf) {
                    Helper.mensaje(this, "El numero de filas debe ser igual al numero de columnas", "Error", 2);
                } else {
                    Helper.figura1(tblMatrizInicial, tblMatrizResultante);
                }
                break;
            case 9:
                if (nc % 2 == 0 || nf % 2 == 0) {
                    Helper.mensaje(this, "El numero de filas y columnas debe ser impar", "Error", 2);
                } else if (nc != nf) {
                    Helper.mensaje(this, "El numero de filas debe ser igual al numero de columnas", "Error", 2);
                } else {
                    Helper.figura2(tblMatrizInicial, tblMatrizResultante);
                }
                break;
            case 10:
                if (nc % 2 != 0 || nf % 2 != 0) {
                    Helper.mensaje(this, "El numero de filas y columnas debe ser par", "Error", 2);
                } else if (nc != nf) {
                    Helper.mensaje(this, "El numero de filas debe ser igual al numero de columnas", "Error", 2);
                } else {
                    Helper.figura3(tblMatrizInicial, tblMatrizResultante);
                }
                break;
            case 11:
                if (nc == 5 && nf == 5) {
                    Helper.figura4(tblMatrizInicial, tblMatrizResultante);
                } else {
                    Helper.mensaje(this, "No se puede hacer la figura", "error", 2);
                }
                break;
        }
        JButton botonesH[] = {cmdOperaciones, cmdLimpiar};
        JButton botonesD[] = {cmdLlenadoAutomatico, cmdLlenadoManual, cmdCrear};
        Helper.deshabilitarBotones(botonesD);
        Helper.habilitarBotones(botonesH);
    }//GEN-LAST:event_cmdOperacionesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbOperaciones;
    private javax.swing.JButton cmdCrear;
    private javax.swing.JButton cmdLimpiar;
    private javax.swing.JButton cmdLlenadoAutomatico;
    private javax.swing.JButton cmdLlenadoManual;
    private javax.swing.JButton cmdOperaciones;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTable tblMatrizInicial;
    private javax.swing.JTable tblMatrizResultante;
    private javax.swing.JTextField txtNumeroColumnas;
    private javax.swing.JTextField txtNumeroFilas;
    // End of variables declaration//GEN-END:variables
}
